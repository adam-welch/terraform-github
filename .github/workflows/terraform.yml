# .github/workflows/terraform.yml
name: Use Reusable Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'    
        required: true             
        default: 'warning'         
      environment:
        description: 'Environment to deploy to'
        required: true  
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  call-terraform-plan:
    uses: adam-welch/pipeline-templates/.github/workflows/terraform_plan.yml@main
    with:
      terraform_version: "1.3.0" 


# name: Terraform CI/CD

# on:
#   push:
#     branches:
#       - main  # Trigger the workflow on push events to main branch
#   pull_request:
#     branches:
#       - main  # Additionally trigger on pull requests to main branch

# jobs:
#   build:
#     name: Initialize and Validate Terraform
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v2
#       with:
#         terraform_version: '1.3.0'  # Specify your Terraform version here

#     - name: Terraform Init
#       run: terraform init

#     - name: Terraform Format
#       run: terraform fmt -check

#     - name: Terraform Validate
#       run: terraform validate

#   plan:
#     name: Terraform Plan
#     needs: build  # This job needs the build job to succeed
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v2

#     - name: Terraform Init
#       run: terraform init

#     - name: Terraform Plan
#       run: terraform plan -out=tfplan
#       id: plan

#     - name: Save Terraform Plan
#       uses: actions/upload-artifact@v3
#       with:
#         name: terraform-plan
#         path: tfplan

#   # apply:
#   #   name: Terraform Apply
#   #   needs: plan  # This job runs only if the plan job succeeds
#   #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Only apply on push to main
#   #   runs-on: ubuntu-latest
#   #   environment:  # Define the environment that requires approval
#   #     name: production
#   #     url: ${{ steps.deploy.outputs.live_site_url }}  # Optional: if you want to link to the live site as part of the deployment status
#   #   steps:
#   #   - name: Checkout code
#   #     uses: actions/checkout@v3

#   #   - name: Setup Terraform
#   #     uses: hashicorp/setup-terraform@v2

#   #   - name: Download Terraform Plan
#   #     uses: actions/download-artifact@v3
#   #     with:
#   #       name: terraform-plan
#   #       path: .

#   #   - name: Terraform Apply
#   #     run: terraform apply -auto-approve tfplan
      